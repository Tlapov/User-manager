{"ast":null,"code":"import { of, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AuthService {\n  constructor(router) {\n    this.router = router;\n  }\n  setToken(token) {\n    localStorage.setItem('token', token);\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n  isLoggedIn() {\n    return this.getToken() !== null;\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n  }\n  login({\n    email,\n    password\n  }) {\n    if (email === 'toni.lapov95@gmail.com' && password === 'toni123') {\n      this.setToken('abcdefghijklmnopqrstuvwxyz');\n      return of({\n        name: 'Toni',\n        email: 'toni.lapov95@gmail.com'\n      });\n    }\n    return throwError(new Error('Failed to login'));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,EAAE,EAAEC,UAAU,QAAQ,MAAM;;;AAOjD,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;EAAW;EAErCC,QAAQ,CAACC,KAAa;IACpBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACtC;EAEAG,QAAQ;IACN,OAAOF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;EACtC;EAEAC,UAAU;IACR,OAAO,IAAI,CAACF,QAAQ,EAAE,KAAK,IAAI;EACjC;EAEAG,MAAM;IACJL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;EACjC;EAEAC,KAAK,CAAC;IAAEC,KAAK;IAAEC;EAAQ,CAAO;IAC5B,IAAID,KAAK,KAAK,wBAAwB,IAAIC,QAAQ,KAAK,SAAS,EAAE;MAChE,IAAI,CAACZ,QAAQ,CAAC,4BAA4B,CAAC;MAC3C,OAAOL,EAAE,CAAC;QAAEkB,IAAI,EAAE,MAAM;QAAEF,KAAK,EAAE;MAAwB,CAAE,CAAC;;IAE9D,OAAOf,UAAU,CAAC,IAAIkB,KAAK,CAAC,iBAAiB,CAAC,CAAC;EACjD;;AA1BWjB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["of","throwError","AuthService","constructor","router","setToken","token","localStorage","setItem","getToken","getItem","isLoggedIn","logout","removeItem","navigate","login","email","password","name","Error","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\tonil\\Desktop\\User-manager\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Observable, of, throwError } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  constructor(private router: Router) {}\n\n  setToken(token: string): void {\n    localStorage.setItem('token', token);\n  }\n\n  getToken(): string | null {\n    return localStorage.getItem('token');\n  }\n\n  isLoggedIn() {\n    return this.getToken() !== null;\n  }\n\n  logout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['login']);\n  }\n\n  login({ email, password }: any): Observable<any> {\n    if (email === 'toni.lapov95@gmail.com' && password === 'toni123') {\n      this.setToken('abcdefghijklmnopqrstuvwxyz');\n      return of({ name: 'Toni', email: 'toni.lapov95@gmail.com' });\n    }\n    return throwError(new Error('Failed to login'));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}