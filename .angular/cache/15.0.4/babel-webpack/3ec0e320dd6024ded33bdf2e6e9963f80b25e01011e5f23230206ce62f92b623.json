{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { Component, Inject } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nlet DialogComponent = class DialogComponent {\n  constructor(api, formBuilder, editData) {\n    this.api = api;\n    this.formBuilder = formBuilder;\n    this.editData = editData;\n  }\n  ngOnInit() {\n    this.userForm = this.formBuilder.group({\n      user: [\"\", Validators.required],\n      email: [\"\", Validators.required],\n      mobile: [\"\", Validators.required]\n    });\n    if (this.editData) {\n      this.userForm.controls[\"user\"].setValue(this.editData.user);\n      this.userForm.controls[\"email\"].setValue(this.editData.email);\n      this.userForm.controls[\"mobile\"].setValue(this.editData.mobile);\n    }\n  }\n  updateUser() {\n    this.api.putUser(this.userForm.value, this.editData.id).subscribe({\n      next: res => {\n        alert(\"User updated succesfully\");\n        this.userForm.reset();\n      },\n      error: () => {\n        alert(\"Error while updating....\");\n      }\n    });\n  }\n};\n__decorate([ViewChild(MatPaginator)], DialogComponent.prototype, \"paginator\", void 0);\n__decorate([ViewChild(MatSort)], DialogComponent.prototype, \"sort\", void 0);\nDialogComponent = __decorate([Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n}), __param(2, Inject(MAT_DIALOG_DATA))], DialogComponent);\nexport { DialogComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AACzD,SAASC,SAAS,QAAQ,eAAe;AAEzC,SAAiCC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,eAAe,QAAO,0BAA0B;AACzD,SAASC,YAAY,QAAQ,6BAA6B;AAC1D,SAASC,OAAO,QAAQ,wBAAwB;AAQzC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAQ1BC,YAAoBC,GAAgB,EAAUC,WAAwB,EACpCC,QAAc;IAD5B,QAAG,GAAHF,GAAG;IAAuB,gBAAW,GAAXC,WAAW;IACvB,aAAQ,GAARC,QAAQ;EAAS;EAEnDC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACrCC,IAAI,EAAG,CAAC,EAAE,EAAEZ,UAAU,CAACa,QAAQ,CAAC;MAChCC,KAAK,EAAG,CAAC,EAAE,EAAEd,UAAU,CAACa,QAAQ,CAAC;MACjCE,MAAM,EAAG,CAAC,EAAE,EAAEf,UAAU,CAACa,QAAQ;KAClC,CAAC;IACF,IAAG,IAAI,CAACL,QAAQ,EAAC;MACf,IAAI,CAACE,QAAQ,CAACM,QAAQ,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACT,QAAQ,CAACI,IAAI,CAAC;MAC3D,IAAI,CAACF,QAAQ,CAACM,QAAQ,CAAC,OAAO,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACT,QAAQ,CAACM,KAAK,CAAC;MAC7D,IAAI,CAACJ,QAAQ,CAACM,QAAQ,CAAC,QAAQ,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACT,QAAQ,CAACO,MAAM,CAAC;;EAEnE;EACAG,UAAU;IACR,IAAI,CAACZ,GAAG,CAACa,OAAO,CAAC,IAAI,CAACT,QAAQ,CAACU,KAAK,EAAE,IAAI,CAACZ,QAAQ,CAACa,EAAE,CAAC,CACtDC,SAAS,CAAC;MACTC,IAAI,EAAGC,GAAG,IAAI;QACZC,KAAK,CAAC,0BAA0B,CAAC;QACjC,IAAI,CAACf,QAAQ,CAACgB,KAAK,EAAE;MACvB,CAAC;MACDC,KAAK,EAAC,MAAK;QACTF,KAAK,CAAC,0BAA0B,CAAC;MACnC;KACD,CAAC;EACJ;CAED;AA/B0BG,YAAxB7B,SAAS,CAACG,YAAY,CAAC,kDAA0B;AAC9B0B,YAAnB7B,SAAS,CAACI,OAAO,CAAC,6CAAe;AANvBC,eAAe,eAL3BP,SAAS,CAAC;EACTgC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,EAUGC,iBAAM,CAAC/B,eAAe,CAAC,IATfG,eAAe,CAoC3B;SApCYA,eAAe","names":["Component","Inject","ViewChild","Validators","MAT_DIALOG_DATA","MatPaginator","MatSort","DialogComponent","constructor","api","formBuilder","editData","ngOnInit","userForm","group","user","required","email","mobile","controls","setValue","updateUser","putUser","value","id","subscribe","next","res","alert","reset","error","__decorate","selector","templateUrl","styleUrls","__param"],"sourceRoot":"","sources":["C:\\Users\\tonil\\Desktop\\user-manager\\src\\app\\dialog\\dialog.component.ts"],"sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA} from \"@angular/material/dialog\";\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n  userForm !: FormGroup;\n\n  dataSource!: MatTableDataSource<any>;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort\n\n  constructor(private api : ApiService, private formBuilder: FormBuilder, \n    @Inject(MAT_DIALOG_DATA) public editData : any) {}\n  \n  ngOnInit(): void {\n    this.userForm = this.formBuilder.group({\n      user : [\"\", Validators.required],\n      email : [\"\", Validators.required],\n      mobile : [\"\", Validators.required],\n    })\n    if(this.editData){\n      this.userForm.controls[\"user\"].setValue(this.editData.user)\n      this.userForm.controls[\"email\"].setValue(this.editData.email)\n      this.userForm.controls[\"mobile\"].setValue(this.editData.mobile)\n    }\n  }\n  updateUser(){\n    this.api.putUser(this.userForm.value, this.editData.id)\n    .subscribe({\n      next: (res) => {\n        alert(\"User updated succesfully\")\n        this.userForm.reset();\n      },\n      error:() => {\n        alert(\"Error while updating....\")\n      }\n    })\n  }\n    \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}